version: '3'   # Version argument seems to be obselete nowadays
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    depends_on:
      - api
      - client
    restart: always   # we need the nginx to always run
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:   # Rename server to api to make nginx happy and prevent any errors.
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules   # Add blocker. Don't try to override it, leave it as it is.
      - ./server:/app   # Everytime process try to access anything in the /app except the node_modules, it will be redirected to /server. Any changes to the /server will be reflected in the /app.
    environment:
      - REDIS_HOST=redis   # Everytime we access service that has been defined in the docker-compose file, we just specify the name of the service.
      - REDIS_PORT=6379   # Default port. This can be configured. Information can be found on Docker hub. 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules   # exclude /node_modules from the following comment
      - ./client:/app   # Everything in the /client directory should be shared with the /app. Live updated for dev!
    environment:
      - WDS_SOCKET_PORT=0   # Due to browser error due to missing active connection back to the react server
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules   # exclude /node_modules from the following comment
      - ./worker:/app   # Everything in the /client directory should be shared with the /app. Live updated for dev!
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379